
<template>

  <div>
    <van-nav-bar
      title="头条"
      left-text=""
      right-text=""
      :left-arrow="false"
      :fixed="true"
    />
    <div class="mTop">
      <van-list
        v-model="loading"
        :finished="finished"
        @load="onLoad"
      >
        <van-cell v-for="(item,index) in list" :key="index" :to="{name:'头条详情', params: { id: item.id }}">
          <!--<van-card
              :title= item.title
              :thumb= item.img
            >
              <div slot="thumb" class="news-img">
                <img :src="item.img"/>
              </div>
              <div slot="footer">
                <span>{{ item.author }}</span>
                <div style="float:right">
                  <img src="../../assets/logo.png" alt="" width="20" height="20" >
                  <span>{{ item.PageViews }}</span>
                </div>
              </div>
            </van-card>-->
            <div class="news-items">
              <div class="news-img">
                <img :src="picIp+item.imgPath"/>
              </div>
              <div class="news-content">
                <div class="news-title">{{ item.title }}</div>
              <div class="news-bottom">
                <span class="news-author">{{ item.createBy }}</span>
                <div class="news-visited">
                  <van-icon name="password-view"/>
                  <span>{{ item.like }}</span>
                </div>
              </div>
              </div>
            </div>
        </van-cell>
      </van-list>
    </div>
  </div>
</template>
<script>
import { newsList } from '@/api/news'
import imageURL from '@/assets/logo.png'
import { Card, Button, List } from 'vant'
export default {
  data() {
    return {
      imageURL: imageURL,
      list: [],
      loading: false,
      finished: true,
      picIp: process.env.BASE_API
    }
  },
  mounted() {
    const a = 1
    if (a > 0) {

    }
  },
  created() {
    newsList({ pageNo: 0, pageSize: 10, isShow: 1 }).then((data) => {
      this.list = data.page.records// 赋值数据
    })
  },
  methods: {
    onLoad() {
      // setTimeout(() => {
      //   for (let i = 0; i < 10; i++) {
      //     this.list.push(this.list.length + 1)
      //   }
      //   this.loading = false
      //   if (this.list.length >= 50) {
      //     this.finished = true
      //   }
      // }, 1000)
    }
  },
  components: {
    [Card.name]: Card,
    [Button.name]: Button,
    [List.name]: List
  }
}
</script>
<style scoped>
 .news-item{
   position: relative;
   padding: 0.79rem 1.18rem;
   font-size: 1.18rem;
 }
 .news-img{
   width: 8.67rem;
   height: 5.91rem;
   border-radius: 0.32rem;
  }
  .news-img img{
    width:100%;
    height: 100%;
    border-radius: 0.35rem;
  }
  .news-content{
    position: absolute;
    left: 10.5rem;
    right:0.8rem;
    top: 0.5rem;
    height:5.91rem;
  }
  .news-title{
    color: #333;
    font-size: 1.18rem;
    margin-top: 0.08rem;
    display: -webkit-box;
    -webkit-line-clamp:2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  .news-bottom{
    position: absolute;
    bottom: 0;
    right: 0;
    left: 0;
    color: #999;
    font-size: 0.95rem;
  }
  .news-visited{
    float: right;
  }
</style>
